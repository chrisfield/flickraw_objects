require "flickraw_objects/version"
require 'date'
require "flickraw_objects/configuration"
require "flickraw_objects/attributes"

module FlickrawObjects

  class Person 
    include Attributes

    def self.find_by_username(username)
      response = flickr.people.findByUsername username: username
      Person.new(response)
    end

    def get_info
      @get_info ||= flickr.people.getInfo user_id: id
    end

    def get_photos
      result = Array.new
      response = flickr.people.getPhotos user_id: id
      response.each do |photo|
        result << Photo.new(photo)
      end
      result
    end
    alias photos get_photos

    def get_photosets
      PhotoSet.list(id)
    end


    attribute :id         
    attribute :username

    attribute_source :get_info
    attribute :realname,                        path: [:realname]
    attribute :photos_count,     type: Integer, path: [:photos, :count]
    attribute :professional,     type: Boolean, path: [:ispro]
    attribute :first_date_taken ,type: Time,    path: [:photos, :firstdatetaken]
    attribute :first_date,       type: Time,    path: [:firstdate]

  end

  class PhotoSet
    include Attributes

    def self.list(user_id)
      result = Array.new
      response = flickr.photosets.getList user_id: user_id
      response.each do |item|
        result << PhotoSet.new(item)
      end
      result
    end

    def self.find(photoset_id)
      info = flickr.photosets.getInfo photoset_id: photoset_id
      result = PhotoSet.new(info)
      result.get_info = info
      result
    end

    attr_writer :get_info
    def get_info
      @get_info ||= flickr.photosets.getInfo photoset_id: id
    end

    def get_photos
      result = Array.new
      response = flickr.photosets.getPhotos photoset_id: id
      puts response.inspect
      response.photo.each do |photo|
        result << Photo.new(photo)
      end
      result
    end
    alias photos get_photos

    attribute :id
    attribute :primary 
    attribute :secret
    attribute :server
    attribute :photos_count, type: Integer, path: [:count_photos]
    attribute :views_count, type: Integer, path: [:count_views]
    attribute :comments_count, type: Integer, path: [:count_comments]
    attribute :videos_count, type: Integer, path: [:count_videos]
    attribute :can_comment, type: Boolean
    attribute :created, type: Time, path: [:date_create]
    attribute :updated, type: Time, path: [:date_update]
    attribute :title
    attribute :description

    attribute_source :get_info
    attribute :owner

  end

  class Photo
    include Attributes
    attribute :id
    attribute :owner
    attribute :secret
    attribute :server
    attribute :farm
    attribute :title
    attribute :public, type: Boolean, path: [:ispublic]
    attribute :friend, type: Boolean, path: [:isfriend]
    attribute :family, type: Boolean, path: [:isfamily]

    def url
      "http://farm#{farm}.staticflickr.com/#{server}/#{id}_#{secret}.jpg"
    end
  end


end
